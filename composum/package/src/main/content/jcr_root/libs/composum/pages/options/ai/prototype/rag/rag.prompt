Generate a HTML page "Answer questions with RAG (retrieval augmented generation)" that contains a form calling the RAGServlet with the "ragAnswer" selector.
You can use bootstrap and jquery. Make it pleasantly colorful with pastel colors, blueish.

Include a path, a limit field, a limitRagTexts field,
a checkbox for embeddingOrder (initially checked),
a checkbox for preprocessQuery (initially checked),
a query textarea and a submit button that triggers the actual call to the RAGServlet.
Include a three sentence description what the application does (including what RAG is), and a one sentence description on each field.
The page is deployed on the same host as the servlet.
Parse the result and display the result text (markdown) with the showdown library converted as HTML.
Bind enter in the query textarea to submit. Disable the submit button while the request is running.
Add a stop button that cancels a running request and reenables the submit button.
There is a reset button that resets the form fields and the result to empty, in the case of the limit field to 10.

On each submit the values of the fields and checkboxes should be stored in localStorage at key composum-ai-prototype-rag ,
and on first loading of the page the last values should be restored from there.

If the request to the servlet returns an error, display the error (status message and body of the response) instead of the results.
